{
  "home": {
    "seo": {
      "title": "Programming Language Learning Platform | Master New Languages from What You Know",
      "description": "Learn new programming languages faster through syntax comparison and concept mapping. Designed for developers who want to leverage existing knowledge to master Python, Rust and more with interactive code editors and progressive learning paths.",
      "keywords": ["programming languages", "language learning", "JavaScript", "Python", "Rust", "C++", "developers", "code comparison", "syntax conversion", "online learning", "programming education", "language migration", "skill development", "full-stack development", "web development", "systems programming", "memory management", "performance optimization", "low-level programming", "object-oriented programming", "templates", "smart pointers", "concurrency", "multithreading", "system calls", "STL"]
    },
    "interactiveCodeComparison": {
      "title": "Language Comparison",
      "realtime": "Real-time",
      "sourceLanguage": "Source Language",
      "targetLanguage": "Target Language",
      "generatingComparison": "Generating code comparison...",
      "noComparisonContent": "No comparison content",
      "noComparisonDescription": "Please select supported language combinations",
      "recommendedCombinations": "Recommended Combinations",
      "difficulty": {
        "beginner": "Beginner",
        "intermediate": "Intermediate",
        "advanced": "Advanced"
      },
      "copyCode": "Copy Code",
      "codeCopied": "Code Copied"
    },
    "hero": {
      "title": "Master New Languages, Faster.",
      "subtitle": "Learn by Comparison, Not from Scratch.",
      "description": "help you leverage your existing programming knowledge to learn new syntaxes and paradigms intuitively. Stop starting from scratch, start shifting your skills.",
      "cta": "Start Learning Now",
      "stats": {
        "learners": "5,000+",
        "languages": "6",
        "modules": "80+",
        "projects": "30+"
      },
      "statsLabels": {
        "learners": "Active Learners",
        "languages": "Supported Languages",
        "modules": "Learning Modules",
        "projects": "Real Projects"
      },
      "viewLearningPath": "View Learning Path",
      "coreFeatures": {
        "codeComparison": {
          "title": "Code Comparison Learning",
          "description": "Side-by-side syntax comparison for intuitive language understanding"
        },
        "progressiveLearning": {
          "title": "Progressive Mastery",
          "description": "From basics to advanced, 10+ modules systematic learning"
        },
        "realProjects": {
          "title": "Real Projects",
          "description": "30+ real projects covering multiple application domains"
        }
      }
    },
    "howItWorks": {
      "title": "How LangShift.dev Works",
      "subtitle": "Your path to mastering new languages, simplified.",
      "steps": [
        {
          "title": "Choose Your Base Language",
          "description": "Select the programming language you already know well. This is your foundation."
        },
        {
          "title": "Pick Your Target Language",
          "description": "Choose the new language you want to learn. We'll bridge the gap for you."
        },
        {
          "title": "Learn Side-by-Side",
          "description": "Experience interactive lessons with real-time code comparisons, making learning intuitive and efficient."
        }
      ]
    },
    "codeDemo": {
      "title": "See the Comparison in Action",
      "subtitle": "Understand new syntax instantly with our side-by-side code editor.",
      "interactiveExperience": "Interactive Experience",
      "experienceTitle": "Experience Code Comparison Learning",
      "experienceDescription": "Choose your familiar language and target language, view syntax comparison and concept mapping in real-time"
    },
    "coursesSection": {
      "title": "Choose Your Learning Course",
      "subtitle": "Start from the language you know, and quickly grasp the essence of a new one."
    },
    "courses": {
      "js2py": {
        "title": "JavaScript → Python",
        "description": "Learn Python from a JavaScript developer perspective. Master syntax conversion and concept mapping. Includes web development, data processing, and automation projects.",
        "features": ["Syntax Mapping", "Web Development", "Data Processing", "Automation Scripts", "Type Annotations"],
        "duration": "8-12 weeks",
        "level": "Intermediate"
      },
      "js2rust": {
        "title": "JavaScript → Rust",
        "description": "Learn Rust from a JavaScript developer perspective. Understand memory safety and systems programming. Master ownership system and zero-cost abstractions.",
        "features": ["Memory Safety", "Systems Programming", "Concurrent Programming", "Performance Optimization", "WebAssembly"],
        "duration": "10-16 weeks",
        "level": "Advanced"
      },
      "js2cpp": {
        "title": "JavaScript → C++",
        "description": "Master C++ from a JavaScript background, focusing on performance, memory management, and systems programming.",
        "features": ["Memory Management", "Performance Optimization", "Systems Programming", "STL", "Modern C++"],
        "duration": "12-18 weeks",
        "level": "Advanced"
      },
      "js2go": {
        "title": "JavaScript → Go",
        "description": "Learn Go from a JavaScript developer perspective, focusing on concurrency, systems programming, and cloud-native development.",
        "features": ["Concurrent Programming", "Systems Programming", "Microservices", "Cloud-Native", "Performance Optimization"],
        "duration": "8-12 weeks",
        "level": "Intermediate"
      },
      "js2swift": {
        "title": "JavaScript → Swift",
        "description": "Learn Swift from a JavaScript developer perspective, focusing on type safety, iOS development, and protocol-oriented programming.",
        "features": ["Type Safety", "iOS Development", "SwiftUI", "Protocol-Oriented", "Memory Management"],
        "duration": "10-16 weeks",
        "level": "Intermediate"
      },
      "js2c": {
        "title": "JavaScript → C",
        "description": "Learn C programming from a JavaScript developer perspective, mastering memory management, pointer operations, and systems programming.",
        "features": ["Memory Management", "Pointer Operations", "Systems Programming", "Performance Optimization", "Low-level Development"],
        "duration": "12-18 weeks",
        "level": "Advanced"
      },
      "js2kotlin": {
        "title": "JavaScript → Kotlin",
        "description": "Learn Kotlin programming from a JavaScript developer perspective, mastering coroutines, Android development, and JVM ecosystem.",
        "features": ["Coroutines", "Android Development", "Functional Programming", "JVM Ecosystem", "Cross-platform Development"],
        "duration": "8-12 weeks",
        "level": "Intermediate"
      },
      "startLearning": "Start Learning",
      "comingSoon": "Coming Soon"
    },
    "features": {
      "title": "Why Choose LangShift.dev?",
      "subtitle": "Modern learning experience designed for developers",
      "codeEditor": {
        "title": "Interactive Code Editor",
        "description": "Run code in real-time and see results instantly. Support multi-language syntax highlighting and intelligent suggestions for intuitive learning."
      },
      "syntaxComparison": {
        "title": "Smart Syntax Comparison",
        "description": "Side-by-side syntax comparison between languages with automatic concept mapping for quick understanding of language features."
      },
      "learningPath": {
        "title": "Progressive Learning Path",
        "description": "Complete learning system from basics to advanced with 13 progressive modules ensuring effective learning outcomes."
      },
      "performance": {
        "title": "Performance Monitoring",
        "description": "Real-time code execution performance monitoring, comparing performance characteristics across languages to optimize development efficiency."
      },
      "projects": {
        "title": "Real-world Projects",
        "description": "30+ real project cases covering web development, data processing, systems programming and more domains."
      },
      "community": {
        "title": "Developer Community",
        "description": "Connect with developers worldwide, share learning experiences, solve technical challenges, and grow together."
      }
    },
    "learningPath": {
      "title": "Complete Learning Path",
      "subtitle": "From basic syntax to advanced features, 15 modules progressive learning",
      "description": "Each language conversion module follows the same learning path, with content optimized for specific languages and a unified structure for easy comparison and extension.",
      "modules": [
        {
          "phase": "Foundation Phase",
          "description": "Build language foundations, understand core concepts and syntax differences",
          "duration": "5 weeks",
          "items": [
            {
              "title": "Language Introduction & Learning Methods",
              "description": "Understand the target language's ecosystem and design philosophy",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Syntax Comparison & Concept Mapping",
              "description": "Master basic syntax, establish concept mapping between languages",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Module System & Package Management",
              "description": "Learn project organization and dependency management",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Object-Oriented & Functional Programming",
              "description": "Understand implementation differences of different programming paradigms",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Async Programming & Concurrency",
              "description": "Master asynchronous programming models and concurrency mechanisms",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            }
          ]
        },
        {
          "phase": "Practical Phase",
          "description": "Apply learned knowledge through real projects, enhance development skills",
          "duration": "5 weeks",
          "items": [
            {
              "title": "Code Quality & Testing",
              "description": "Learn code quality assurance and testing best practices",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Web Development Practice",
              "description": "Build modern web applications",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Data Processing & Automation",
              "description": "Handle data analysis and automation script development",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Comprehensive Real-world Projects",
              "description": "Integrate all skills to complete full project development",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Performance Optimization & Debugging",
              "description": "Master performance optimization techniques and debugging methods",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            }
          ]
        },
        {
          "phase": "Advanced Phase",
          "description": "Dive into advanced features, master language-specific best practices",
          "duration": "5 weeks",
          "items": [
            {
              "title": "Advanced Language Features",
              "description": "Explore advanced language features and optimization techniques",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Common Pitfalls & Solutions",
              "description": "Identify and avoid common programming pitfalls",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Best Practices & Design Patterns",
              "description": "Learn industry best practices and design patterns",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Type Systems & Static Analysis",
              "description": "Deep understanding of type systems and static analysis tools",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            },
            {
              "title": "Engineering & Team Collaboration",
              "description": "Master engineering processes and team collaboration methods",
              "focus": ["Variable Declaration", "Data Types", "Control Flow", "Function Definition", "Error Handling"]
            }
          ]
        }
      ],
      "languageSpecificFeatures": {
        "js2py": {
          "title": "JavaScript → Python Features",
          "highlights": [
            "Dynamic typing to static type annotations",
            "Event loop to coroutine model",
            "npm ecosystem to pip ecosystem",
            "Functional programming to Pythonic style"
          ]
        },
        "js2rust": {
          "title": "JavaScript → Rust Features",
          "highlights": [
            "Garbage collection to ownership system",
            "Dynamic typing to static typing",
            "Single-threaded to multi-threaded concurrency",
            "Interpreted execution to compiled optimization"
          ]
        },
        "js2cpp": {
          "title": "JavaScript → C++ Features",
          "highlights": [
            "Detailed comparison of JavaScript's garbage collection and C++'s manual memory management, focusing on pointers, references, and smart pointers",
            "Showcasing C++'s performance advantages, including compilation optimization and memory layout optimization",
            "Introduction to C++ applications in systems programming, including concurrent programming and network programming",
            "In-depth explanation of Standard Template Library (STL) usage, including containers, algorithms, and iterators",
            "Introduction to modern C++ features like smart pointers, lambda expressions, and move semantics",
            "In-depth explanation of C++'s template and generic programming capabilities",
            "Detailed comparison of C++'s OOP with JavaScript's prototype chain"
          ]
        },
        "js2go": {
          "title": "JavaScript → Go Features",
          "highlights": [
            "Dynamic typing to static typing",
            "Event loop to goroutine concurrency model",
            "npm ecosystem to Go modules",
            "Async programming to synchronous programming style"
          ]
        },
        "js2java": {
          "title": "JavaScript → Java Features",
          "highlights": [
            "Dynamic typing to strong type system",
            "Functional programming to object-oriented",
            "Event loop to multi-threading model",
            "Interpreted execution to JVM bytecode"
          ]
        },
        "js2swift": {
          "title": "JavaScript → Swift Features",
          "highlights": [
            "Dynamic typing to type safety",
            "Web development to iOS/macOS development",
            "Functional programming to protocol-oriented programming",
            "Async programming to Combine framework"
          ]
        },
        "js2c": {
          "title": "JavaScript → C Features",
          "highlights": [
            "Garbage collection to manual memory management",
            "Dynamic typing to static type system",
            "High-level abstractions to low-level control",
            "Interpreted execution to compiled optimization",
            "Automatic memory management to pointer operations",
            "Web development to systems programming",
            "Event loop to multi-threaded concurrency"
          ]
        },
        "js2dart": {
          "title": "JavaScript → Dart Features",
          "highlights": [
            "Dynamic typing to type safety",
            "Web development to cross-platform development",
            "Event loop to isolate model",
            "Functional programming to object-oriented"
          ]
        }
      },
      "learningTips": [
        "Each module includes rich code examples and exercises",
        "Supports multiple learning paces, adjustable based on personal situation",
        "Provides real-time feedback and performance monitoring",
        "Includes real project cases and best practices"
      ],
      "languageOptimization": {
        "title": "Language-Specific Optimization",
        "subtitle": "Each language conversion has its unique optimization focus and learning characteristics"
      },
      "learningTipsSection": {
        "title": "Learning Tips",
        "subtitle": "Follow these suggestions to make your learning journey more efficient and enjoyable"
      }
    },
    "testimonials": {
      "title": "What Developers Say",
      "subtitle": "Hear their learning experiences",
      "items": [
        {
          "name": "Zhang Ming",
          "role": "Full-stack Developer",
          "content": "Learned Python through LangShift.dev and could develop web applications independently in 2 weeks. The comparison learning approach is really effective, much faster than traditional learning!",
          "avatar": "👨‍💻"
        },
        {
          "name": "Li Hua",
          "role": "Frontend Engineer",
          "content": "The JavaScript to Rust conversion learning gave me a whole new understanding of systems programming with significant performance improvements and higher code quality.",
          "avatar": "👩‍💻"
        },
        {
          "name": "Wang Qiang",
          "role": "Tech Lead",
          "content": "Our team uses LangShift.dev for tech stack migration training. Learning efficiency improved 3x, highly recommended for all developers learning new languages!",
          "avatar": "👨‍💼"
        }
      ]
    },
    "cta": {
      "title": "Ready to start your language learning journey?",
      "subtitle": "Join 5,000+ developers in learning",
      "primary": "Start Learning Free",
      "secondary": "View Learning Path"
    },
    "structuredData": {
      "courseList": "Programming Language Conversion Courses"
    }
  },
  "interactiveComparison": {
    "initialLanguageLabel": "Initial Language",
    "targetLanguageLabel": "Target Language",
    "showComparisonButton": "Show Comparison",
    "noComparisonAvailable": "No comparison available for the selected languages. Please try another combination.",
    "selectPlaceholder": "Select a language"
  },
  "languages": {
    "javascript": "JavaScript",
    "python": "Python",
    "rust": "Rust",
    "cpp": "C++",
    "c": "C"
  },
  "header": {
    "logo": "LangShift.dev",
    "nav": {
      "home": "Home",
      "courses": "Courses",
      "docs": "Documentation",
      "about": "About"
    },
    "languageSelector": {
      "label": "Language",
      "en": "English",
      "zh-cn": "简体中文",
      "zh-tw": "繁體中文"
    },
    "github": {
      "label": "GitHub",
      "tooltip": "View source code on GitHub"
    }
  },
  "editor": {
    "title": "Multi-language Code Editor",
    "loading": "Loading editor...",
    "loadingRuntime": "Initializing {language}...",
    "running": "Running...",
    "run": "Run {language}",
    "output": "Output",
    "error": "Error",
    "executionFailed": "{language} environment initialization failed",
    "executionError": "Code execution error",
    "unsupportedLanguage": "Unsupported language: {language}",
    "runtimeError": "{language} code execution failed: {error}",
    "compilationFailed": "Compilation failed",
    "noCode": "No code",
    "copyCode": "Copy Code",
    "codeCopied": "Code copied",
    "theme": {
      "light": "Light Theme",
      "dark": "Dark Theme",
      "auto": "Auto Theme"
    },
    "languages": {
      "python": "Python",
      "javascript": "JavaScript",
      "typescript": "TypeScript",
      "rust": "Rust",
      "cpp": "C++",
      "c": "C",
      "java": "Java",
      "go": "Go",
      "swift": "Swift",
      "kotlin": "Kotlin"
    }
  }
} 