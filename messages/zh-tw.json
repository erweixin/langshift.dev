{
  "home": {
    "seo": {
      "title": "程式語言轉換學習平台 | 從已知語言快速掌握新語言",
      "description": "LangShift.dev 是專門為開發者設計的程式語言轉換學習平台。通過對比不同程式語言的語法特性和概念映射，幫助開發者快速掌握新語言。支援 JavaScript 到 Python、Rust 等多種語言轉換學習，提供互動式程式碼編輯器和漸進式學習路徑。",
      "keywords": ["程式語言", "語言學習", "JavaScript", "Python", "Rust", "C++", "開發者", "程式碼對比", "語法轉換", "線上學習", "程式設計教育", "語言遷移", "技能提升", "全棧開發", "Web開發", "系統程式設計", "記憶體管理", "效能優化", "低階程式設計", "物件導向程式設計", "模板", "智能指標", "並發", "多執行緒", "系統呼叫", "STL"]
    },
    "interactiveCodeComparison": {
      "title": "語言對比",
      "realtime": "即時",
      "sourceLanguage": "源語言",
      "targetLanguage": "目標語言",
      "generatingComparison": "生成程式碼對比中...",
      "noComparisonContent": "暫無對比內容",
      "noComparisonDescription": "請選擇支援的語言組合",
      "recommendedCombinations": "推薦組合",
      "difficulty": {
        "beginner": "初級",
        "intermediate": "中級",
        "advanced": "高級"
      },
      "copyCode": "複製程式碼",
      "codeCopied": "程式碼已複製"
    },
    "hero": {
      "title": "更快地掌握新語言。",
      "subtitle": "透過對比學習，而非從零開始。",
      "description": "幫助您利用現有程式設計知識，直觀地學習新語法和範式。告別從零開始，開始技能轉換。",
      "cta": "立即開始學習",
      "stats": {
        "learners": "5,000+",
        "languages": "6",
        "modules": "80+",
        "projects": "30+"
      },
      "statsLabels": {
        "learners": "活躍學習者",
        "languages": "支援語言",
        "modules": "學習模組",
        "projects": "實戰專案"
      },
      "viewLearningPath": "查看學習路徑",
      "coreFeatures": {
        "codeComparison": {
          "title": "程式碼對比學習",
          "description": "並排對比語法差異，直觀理解語言特性"
        },
        "progressiveLearning": {
          "title": "漸進式掌握",
          "description": "從基礎到高級，10+個模組系統學習"
        },
        "realProjects": {
          "title": "實戰專案",
          "description": "30+真實專案，涵蓋多個應用領域"
        }
      }
    },
    "howItWorks": {
      "title": "LangShift.dev 如何運作",
      "subtitle": "掌握新語言的簡化之路。",
      "steps": [
        {
          "title": "選擇您的基礎語言",
          "description": "選擇您已經熟練掌握的程式語言。這是您的學習基礎。"
        },
        {
          "title": "選擇您的目標語言",
          "description": "選擇您想學習的新語言。我們將為您搭建橋樑。"
        },
        {
          "title": "並排學習",
          "description": "體驗互動課程，即時程式碼對比，讓學習直觀高效。"
        }
      ]
    },
    "codeDemo": {
      "title": "查看實際對比效果",
      "subtitle": "使用我們的並排程式碼編輯器即時理解新語法。",
      "interactiveExperience": "互動式體驗",
      "experienceTitle": "體驗程式碼對比學習",
      "experienceDescription": "選擇您熟悉的語言和目標語言，即時查看語法對比和概念映射"
    },
    "coursesSection": {
      "title": "選擇您的學習課程",
      "subtitle": "從您熟悉的語言開始，快速掌握新語言的精髓。"
    },
    "courses": {
      "js2py": {
        "title": "JavaScript → Python",
        "description": "從 JavaScript 開發者視角學習 Python，掌握語法轉換和概念映射。包含 Web 開發、資料處理、自動化腳本等實戰專案。",
        "features": ["語法映射", "Web 開發", "資料處理", "自動化腳本", "型別註解"],
        "duration": "8-12 週",
        "level": "中級"
      },
      "js2rust": {
        "title": "JavaScript → Rust",
        "description": "從 JavaScript 開發者視角學習 Rust，理解記憶體安全和系統程式設計。掌握所有權系統、零成本抽象等核心概念。",
        "features": ["記憶體安全", "系統程式設計", "並發程式設計", "效能優化", "WebAssembly"],
        "duration": "10-16 週",
        "level": "高級"
      },
      "js2cpp": {
        "title": "JavaScript → C++",
        "description": "從 JavaScript 背景出發，掌握 C++，重點關注性能、內存管理和系統編程。",
        "features": ["內存管理", "性能優化", "系統編程", "STL", "現代 C++"],
        "duration": "12-18 週",
        "level": "高級"
      },
      "js2go": {
        "title": "JavaScript → Go",
        "description": "從 JavaScript 開發者視角學習 Go，重點掌握並發程式設計、系統程式設計和雲原生開發。",
        "features": ["並發程式設計", "系統程式設計", "微服務", "雲原生", "效能優化"],
        "duration": "8-12 週",
        "level": "中級"
      },
      "js2swift": {
        "title": "JavaScript → Swift",
        "description": "從 JavaScript 開發者視角學習 Swift，重點掌握型別安全、iOS 開發和協議導向程式設計。",
        "features": ["型別安全", "iOS 開發", "SwiftUI", "協議導向", "記憶體管理"],
        "duration": "10-16 週",
        "level": "中級"
      },
      "js2c": {
        "title": "JavaScript → C",
        "description": "從 JavaScript 開發者視角學習 C 語言，掌握記憶體管理、指標操作和系統程式設計。",
        "features": ["記憶體管理", "指標操作", "系統程式設計", "效能優化", "底層開發"],
        "duration": "12-18 週",
        "level": "高級"
      },
      "js2kotlin": {
        "title": "JavaScript → Kotlin",
        "description": "從 JavaScript 開發者視角學習 Kotlin，掌握協程程式設計、Android 開發和 JVM 生態系統。",
        "features": ["協程程式設計", "Android 開發", "函數式程式設計", "JVM 生態", "跨平台開發"],
        "duration": "8-12 週",
        "level": "中級"
      },
      "startLearning": "開始學習",
      "comingSoon": "即將推出"
    },
    "features": {
      "title": "為什麼選擇 LangShift.dev？",
      "subtitle": "專為開發者設計的現代化學習體驗",
      "codeEditor": {
        "title": "互動式程式碼編輯器",
        "description": "即時執行程式碼，即時查看結果。支援多語言語法高亮和智慧提示，讓學習更直觀。"
      },
      "syntaxComparison": {
        "title": "智慧語法對比",
        "description": "並排對比不同語言的語法差異，自動映射概念關係，快速理解語言特性。"
      },
      "learningPath": {
        "title": "漸進式學習路徑",
        "description": "從基礎到高級的完整學習體系，13 個模組循序漸進，確保學習效果。"
      },
      "performance": {
        "title": "效能監控",
        "description": "即時監控程式碼執行效能，對比不同語言的效能特性，優化開發效率。"
      },
      "projects": {
        "title": "實戰專案",
        "description": "30+ 個真實專案案例，涵蓋 Web 開發、資料處理、系統程式設計等多個領域。"
      },
      "community": {
        "title": "開發者社群",
        "description": "連接全球開發者，分享學習心得，解決技術難題，共同成長。"
      }
    },
    "learningPath": {
      "title": "完整的學習路徑",
      "subtitle": "從基礎語法到高級特性，15個模組循序漸進",
      "description": "每個語言轉換模組都遵循相同的學習路徑，內容針對特定語言優化，結構統一，便於對比和擴展。",
      "modules": [
        {
          "phase": "基礎階段",
          "description": "建立語言基礎，理解核心概念和語法差異",
          "duration": "5 週",
          "items": [
            {
              "title": "語言介紹與學習方法",
              "description": "了解目標語言的生態系統和設計哲學",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "語法對比與概念映射",
              "description": "掌握基礎語法，建立語言間的概念映射",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "模組系統與套件管理",
              "description": "學習專案的組織方式和依賴管理",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "物件導向與函數式程式設計",
              "description": "理解不同程式設計範式的實作差異",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "非同步程式設計與並發處理",
              "description": "掌握非同步程式設計模型和並發處理機制",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            }
          ]
        },
        {
          "phase": "實戰階段",
          "description": "透過實際專案應用所學知識，提升開發技能",
          "duration": "5 週",
          "items": [
            {
              "title": "程式碼品質與測試",
              "description": "學習程式碼品質保證和測試最佳實踐",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "Web 開發實踐",
              "description": "建構現代化的 Web 應用程式",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "資料處理與自動化",
              "description": "處理資料分析和自動化腳本開發",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "綜合實戰專案",
              "description": "整合所有技能，完成完整的專案開發",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "效能優化與除錯",
              "description": "掌握效能優化技巧和除錯方法",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            }
          ]
        },
        {
          "phase": "高級階段",
          "description": "深入高級特性，掌握語言特有的最佳實踐",
          "duration": "5 週",
          "items": [
            {
              "title": "高級語言特性",
              "description": "探索語言的高級特性和優化技巧",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "常見陷阱與解決方案",
              "description": "識別和避免常見的程式設計陷阱",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "最佳實踐與設計模式",
              "description": "學習產業最佳實踐和設計模式",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "型別系統與靜態分析",
              "description": "深入理解型別系統和靜態分析工具",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            },
            {
              "title": "工程化與團隊協作",
              "description": "掌握工程化流程和團隊協作方法",
              "focus": ["變數宣告", "資料類型", "控制流", "函數定義", "錯誤處理"]
            }
          ]
        }
      ],
      "languageSpecificFeatures": {
        "js2py": {
          "title": "JavaScript → Python 特色",
          "highlights": [
            "動態型別到靜態型別註解",
            "事件迴圈到協程模型",
            "npm 生態系統到 pip 生態",
            "函數式程式設計到 Pythonic 風格"
          ]
        },
        "js2rust": {
          "title": "JavaScript → Rust 特色",
          "highlights": [
            "垃圾回收到所有權系統",
            "動態型別到靜態型別",
            "單執行緒到多執行緒並發",
            "解釋執行到編譯優化"
          ]
        },
        "js2cpp": {
          "title": "JavaScript → C++ 特色",
          "highlights": [
            "詳細對比 JavaScript 的垃圾回收和 C++ 的手動記憶體管理，重點講解指標、引用和智能指標",
            "展示 C++ 在性能方面的優勢，包括編譯優化和記憶體佈局優化",
            "介紹 C++ 在系統程式設計中的應用，包括並發程式設計、網路程式設計等",
            "深入講解標準模板庫 (STL) 的使用，包括容器、演算法和迭代器",
            "介紹智能指標、Lambda 表達式、移動語義等現代 C++ 特性",
            "深入講解 C++ 的模板和泛型程式設計能力",
            "詳細對比 C++ 的 OOP 與 JavaScript 的原型鏈"
          ]
        },
        "js2go": {
          "title": "JavaScript → Go 特色",
          "highlights": [
            "動態型別到靜態型別",
            "事件迴圈到 goroutine 並發模型",
            "npm 生態系統到 Go modules",
            "非同步程式設計到同步程式設計風格"
          ]
        },
        "js2java": {
          "title": "JavaScript → Java 特色",
          "highlights": [
            "動態型別到強型別系統",
            "函數式程式設計到物件導向",
            "事件迴圈到多執行緒模型",
            "解釋執行到 JVM 位元組碼"
          ]
        },
        "js2c": {
          "title": "JavaScript → C 特色",
          "highlights": [
            "垃圾回收到手動記憶體管理",
            "動態型別到靜態型別系統",
            "高級抽象到底層控制",
            "解釋執行到編譯優化",
            "自動記憶體管理到指標操作",
            "Web 開發到系統程式設計",
            "事件迴圈到多執行緒並發"
          ]
        },
        "js2swift": {
          "title": "JavaScript → Swift 特色",
          "highlights": [
            "動態型別到型別安全",
            "Web 開發到 iOS/macOS 開發",
            "函數式程式設計到協議導向程式設計",
            "非同步程式設計到 Combine 框架"
          ]
        },
        "js2c": {
          "title": "JavaScript → C 特色",
          "highlights": [
            "垃圾回收到手動內存管理",
            "高級語言到低級系統程式設計",
            "動態型別到靜態型別",
            "解釋執行到編譯執行"
          ]
        },
        "js2dart": {
          "title": "JavaScript → Dart 特色",
          "highlights": [
            "動態型別到型別安全",
            "Web 開發到跨平台開發",
            "事件迴圈到 isolate 模型",
            "函數式程式設計到物件導向"
          ]
        }
      },
      "learningTips": [
        "每個模組都包含豐富的程式碼範例和練習題",
        "支援多種學習節奏，可根據個人情況調整",
        "提供即時回饋和效能監控",
        "包含真實專案案例和最佳實踐"
      ],
      "languageOptimization": {
        "title": "語言特定優化",
        "subtitle": "每種語言轉換都有其獨特的優化重點和學習特色"
      },
      "learningTipsSection": {
        "title": "學習提示",
        "subtitle": "遵循這些建議，讓你的學習之旅更加高效和愉快"
      }
    },
    "testimonials": {
      "title": "開發者說",
      "subtitle": "聽聽他們的學習體驗",
      "items": [
        {
          "name": "張明",
          "role": "全端開發者",
          "content": "通過 LangShift.dev 學習 Python，2 週就能獨立開發 Web 應用了。對比學習的方式真的很有效，比傳統學習快很多！",
          "avatar": "👨‍💻"
        },
        {
          "name": "李華",
          "role": "前端工程師",
          "content": "從 JavaScript 到 Rust 的轉換學習讓我對系統程式設計有了全新的認識，效能提升明顯，程式碼品質也更高了。",
          "avatar": "👩‍💻"
        },
        {
          "name": "王強",
          "role": "技術主管",
          "content": "團隊使用 LangShift.dev 進行技術棧遷移培訓，學習效率提升了 3 倍，強烈推薦給所有需要學習新語言的開發者！",
          "avatar": "👨‍💼"
        }
      ]
    },
    "cta": {
      "title": "準備好開始你的語言學習之旅了嗎？",
      "subtitle": "加入 5,000+ 開發者的學習行列",
      "primary": "免費開始學習",
      "secondary": "查看學習路徑"
    },
    "structuredData": {
      "courseList": "程式語言轉換課程"
    }
  },
  "interactiveComparison": {
    "initialLanguageLabel": "初始語言",
    "targetLanguageLabel": "目標語言",
    "showComparisonButton": "顯示對比",
    "noComparisonAvailable": "所選語言暫無對比。請嘗試其他組合。",
    "selectPlaceholder": "選擇一種語言"
  },
  "languages": {
    "javascript": "JavaScript",
    "python": "Python",
    "rust": "Rust",
    "cpp": "C++",
    "c": "C"
  },
  "header": {
    "logo": "LangShift.dev",
    "nav": {
      "home": "首頁",
      "courses": "課程",
      "docs": "文件",
      "about": "關於"
    },
    "languageSelector": {
      "label": "語言",
      "en": "English",
      "zh-cn": "简体中文",
      "zh-tw": "繁體中文"
    },
    "github": {
      "label": "GitHub",
      "tooltip": "在 GitHub 上查看原始碼"
    }
  },
  "editor": {
    "title": "多語言程式碼編輯器",
    "loading": "正在載入編輯器...",
    "loadingRuntime": "正在初始化 {language}...",
    "running": "執行中...",
    "run": "執行 {language}",
    "output": "輸出結果",
    "error": "錯誤",
    "executionFailed": "{language} 環境初始化失敗",
    "executionError": "程式碼執行錯誤",
    "unsupportedLanguage": "不支援的語言: {language}",
    "runtimeError": "{language} 程式碼執行失敗: {error}",
    "compilationFailed": "編譯失敗",
    "noCode": "暫無程式碼",
    "copyCode": "複製程式碼",
    "codeCopied": "程式碼已複製",
    "theme": {
      "light": "淺色主題",
      "dark": "深色主題",
      "auto": "自動主題"
    },
    "languages": {
      "python": "Python",
      "javascript": "JavaScript",
      "typescript": "TypeScript",
      "rust": "Rust",
      "cpp": "C++",
      "c": "C",
      "java": "Java",
      "go": "Go",
      "swift": "Swift",
      "kotlin": "Kotlin"
    }
  }
} 