{
  "home": {
    "seo": {
      "title": "编程语言转换学习平台 | 从已知语言快速掌握新语言",
      "description": "LangShift.dev 是专门为开发者设计的编程语言转换学习平台。通过对比不同编程语言的语法特性和概念映射，帮助开发者快速掌握新语言。支持 JavaScript 到 Python、Rust 等多种语言转换学习，提供交互式代码编辑器和渐进式学习路径。",
      "keywords": ["编程语言", "语言学习", "JavaScript", "Python", "Rust", "C++", "开发者", "代码对比", "语法转换", "在线学习", "编程教育", "语言迁移", "技能提升", "全栈开发", "Web开发", "系统编程", "内存管理", "性能优化", "低级编程", "面向对象编程", "模板", "智能指针", "并发", "多线程", "系统调用", "STL"]
    },
    "interactiveCodeComparison": {
      "title": "语言对比",
      "realtime": "实时",
      "sourceLanguage": "源语言",
      "targetLanguage": "目标语言",
      "generatingComparison": "生成代码对比中...",
      "noComparisonContent": "暂无对比内容",
      "noComparisonDescription": "请选择支持的语言组合",
      "recommendedCombinations": "推荐组合",
      "difficulty": {
        "beginner": "初级",
        "intermediate": "中级",
        "advanced": "高级"
      },
      "copyCode": "复制代码",
      "codeCopied": "代码已复制"
    },
    "hero": {
      "title": "免费掌握新编程语言",
      "subtitle": "通过对比学习，而非从零开始。完全免费，无需注册。",
      "description": "帮助您利用现有编程知识，直观地学习新语法和范式。告别从零开始，开始技能转换。100% 免费开源教程，立即开始学习。",
      "cta": "免费开始学习",
      "stats": {
        "learners": "5,000+",
        "languages": "6",
        "modules": "80+",
        "projects": "30+"
      },
      "statsLabels": {
        "learners": "活跃学习者",
        "languages": "支持语言",
        "modules": "学习模块",
        "projects": "实战项目"
      },
      "viewLearningPath": "查看学习路径",
      "freeOpenSource": "100% 免费开源教程",
      "freeBadge": "免费",
      "coreFeatures": {
        "codeComparison": {
          "title": "免费代码对比学习",
          "description": "并排对比语法差异，直观理解语言特性，完全免费"
        },
        "progressiveLearning": {
          "title": "免费渐进式掌握",
          "description": "从基础到高级，80+个免费模块系统学习"
        },
        "realProjects": {
          "title": "免费实战项目",
          "description": "30+免费真实项目，涵盖多个应用领域"
        }
      }
    },
    "howItWorks": {
      "title": "LangShift.dev 如何运作",
      "subtitle": "掌握新语言的简化之路。",
      "steps": [
        {
          "title": "选择您的基础语言",
          "description": "选择您已经熟练掌握的编程语言。这是您的学习基础。"
        },
        {
          "title": "选择您的目标语言",
          "description": "选择您想学习的新语言。我们将为您搭建桥梁。"
        },
        {
          "title": "并排学习",
          "description": "体验互动课程，实时代码对比，让学习直观高效。"
        }
      ]
    },
    "codeDemo": {
      "title": "查看实际对比效果",
      "subtitle": "使用我们的并排代码编辑器即时理解新语法。",
      "interactiveExperience": "交互式体验",
      "experienceTitle": "体验代码对比学习",
      "experienceDescription": "选择您熟悉的语言和目标语言，实时查看语法对比和概念映射"
    },
    "coursesSection": {
      "title": "选择您的免费学习课程",
      "subtitle": "从您熟悉的语言开始，快速掌握新语言的精髓。所有课程完全免费，无需注册即可开始学习。"
    },
    "courses": {
      "js2py": {
        "title": "JavaScript → Python",
        "description": "从 JavaScript 开发者视角学习 Python，掌握语法转换和概念映射。包含 Web 开发、数据处理、自动化脚本等实战项目。",
        "features": ["语法映射", "Web 开发", "数据处理", "自动化脚本", "类型注解"],
        "duration": "8-12 周",
        "level": "中级"
      },
      "js2rust": {
        "title": "JavaScript → Rust",
        "description": "从 JavaScript 开发者视角学习 Rust，理解内存安全和系统编程。掌握所有权系统、零成本抽象等核心概念。",
        "features": ["内存安全", "系统编程", "并发编程", "性能优化", "WebAssembly"],
        "duration": "10-16 周",
        "level": "高级"
      },
      "js2cpp": {
        "title": "JavaScript → C++",
        "description": "从 JavaScript 背景出发，掌握 C++，重点关注性能、内存管理和系统编程。",
        "features": ["内存管理", "性能优化", "系统编程", "STL", "现代 C++"],
        "duration": "12-18 周",
        "level": "高级"
      },
      "js2go": {
        "title": "JavaScript → Go",
        "description": "从 JavaScript 开发者视角学习 Go，重点掌握并发编程、系统编程和云原生开发。",
        "features": ["并发编程", "系统编程", "微服务", "云原生", "性能优化"],
        "duration": "8-12 周",
        "level": "中级"
      },
      "js2swift": {
        "title": "JavaScript → Swift",
        "description": "从 JavaScript 开发者视角学习 Swift，重点掌握类型安全、iOS 开发和协议导向编程。",
        "features": ["类型安全", "iOS 开发", "SwiftUI", "协议导向", "内存管理"],
        "duration": "10-16 周",
        "level": "中级"
      },
      "js2c": {
        "title": "JavaScript → C",
        "description": "从 JavaScript 开发者视角学习 C 语言，掌握内存管理、指针操作和系统编程。",
        "features": ["内存管理", "指针操作", "系统编程", "底层开发"],
        "duration": "12-18 周",
        "level": "高级"
      },
      "js2kotlin": {
        "title": "JavaScript → Kotlin",
        "description": "从 JavaScript 开发者视角学习 Kotlin，掌握协程编程、Android 开发和 JVM 生态系统。",
        "features": ["协程编程", "Android 开发", "函数式编程", "JVM 生态", "跨平台开发"],
        "duration": "8-12 周",
        "level": "中级"
      },
        "startLearning": "免费开始学习",
      "freeCourse": "免费课程",
      "enterNow": "立即进入",
      "comingSoon": "即将推出"
    },
    "features": {
      "title": "为什么选择 LangShift.dev？",
      "subtitle": "专为开发者设计的现代化学习体验",
      "codeEditor": {
        "title": "交互式代码编辑器",
        "description": "实时运行代码，即时查看结果。支持多语言语法高亮和智能提示，让学习更直观。"
      },
      "syntaxComparison": {
        "title": "智能语法对比",
        "description": "并排对比不同语言的语法差异，自动映射概念关系，快速理解语言特性。"
      },
      "learningPath": {
        "title": "渐进式学习路径",
        "description": "从基础到高级的完整学习体系，13 个模块循序渐进，确保学习效果。"
      },
      "performance": {
        "title": "性能监控",
        "description": "实时监控代码执行性能，对比不同语言的性能特性，优化开发效率。"
      },
      "projects": {
        "title": "实战项目",
        "description": "30+ 个真实项目案例，涵盖 Web 开发、数据处理、系统编程等多个领域。"
      },
      "community": {
        "title": "开发者社区",
        "description": "连接全球开发者，分享学习心得，解决技术难题，共同成长。"
      }
    },
    "learningPath": {
      "title": "完整的学习路径",
      "subtitle": "从基础语法到高级特性，15个模块循序渐进",
      "description": "每个语言转换模块都遵循相同的学习路径，内容针对特定语言优化，结构统一，便于对比和扩展。",
      "modules": [
        {
          "phase": "基础阶段",
          "description": "建立语言基础，理解核心概念和语法差异",
          "duration": "5 周",
          "items": [
            {
              "title": "语言介绍与学习方法",
              "description": "了解目标语言的生态系统和设计哲学",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "语法对比与概念映射",
              "description": "掌握基础语法，建立语言间的概念映射",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "模块系统与包管理",
              "description": "学习项目的组织方式和依赖管理",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "面向对象与函数式编程",
              "description": "理解不同编程范式的实现差异",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "异步编程与并发处理",
              "description": "掌握异步编程模型和并发处理机制",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            }
          ]
        },
        {
          "phase": "实战阶段",
          "description": "实际项目应用所学知识",
          "duration": "5 周",
          "items": [
            {
              "title": "代码质量与测试",
              "description": "学习代码质量保证和测试最佳实践",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "Web 开发实践",
              "description": "构建现代化的 Web 应用程序",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "数据处理与自动化",
              "description": "处理数据分析和自动化脚本开发",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "综合实战项目",
              "description": "整合所有技能，完成完整的项目开发",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "性能优化与调试",
              "description": "掌握性能优化技巧和调试方法",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            }
          ]
        },
        {
          "phase": "高级阶段",
          "description": "深入高级特性，掌握语言特有的最佳实践",
          "duration": "5 周",
          "items": [
            {
              "title": "高级语言特性",
              "description": "探索语言的高级特性和优化技巧",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "常见陷阱与解决方案",
              "description": "识别和避免常见的编程陷阱",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "最佳实践与设计模式",
              "description": "学习行业最佳实践和设计模式",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "类型系统与静态分析",
              "description": "深入理解类型系统和静态分析工具",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            },
            {
              "title": "工程化与团队协作",
              "description": "掌握工程化流程和团队协作方法",
              "focus": ["变量声明", "数据类型", "控制流", "函数定义", "错误处理"]
            }
          ]
        }
      ],
      "languageSpecificFeatures": {
        "js2py": {
          "title": "JavaScript → Python 特色",
          "highlights": [
            "动态类型到静态类型注解",
            "事件循环到协程模型",
            "npm 生态系统到 pip 生态",
            "函数式编程到 Pythonic 风格"
          ]
        },
        "js2rust": {
          "title": "JavaScript → Rust 特色",
          "highlights": [
            "垃圾回收到所有权系统",
            "动态类型到静态类型",
            "单线程到多线程并发",
            "解释执行到编译优化"
          ]
        },
        "js2cpp": {
          "title": "JavaScript → C++ 特色",
          "highlights": [
            "详细对比 JavaScript 的垃圾回收和 C++ 的手动内存管理，重点讲解指针、引用和智能指针",
            "展示 C++ 在性能方面的优势，包括编译优化和内存布局优化",
            "介绍 C++ 在系统编程中的应用，包括并发编程、网络编程等",
            "深入讲解标准模板库 (STL) 的使用，包括容器、算法和迭代器",
            "介绍智能指针、Lambda 表达式、移动语义等现代 C++ 特性",
            "深入讲解 C++ 的模板和泛型编程能力",
            "详细对比 C++ 的 OOP 与 JavaScript 的原型链"
          ]
        },
        "js2go": {
          "title": "JavaScript → Go 特色",
          "highlights": [
            "动态类型到静态类型",
            "事件循环到 goroutine 并发模型",
            "npm 生态系统到 Go modules",
            "异步编程到同步编程风格"
          ]
        },
        "js2java": {
          "title": "JavaScript → Java 特色",
          "highlights": [
            "动态类型到强类型系统",
            "函数式编程到面向对象",
            "事件循环到多线程模型",
            "解释执行到 JVM 字节码"
          ]
        },
        "js2c": {
          "title": "JavaScript → C 特色",
          "highlights": [
            "垃圾回收到手动内存管理",
            "动态类型到静态类型系统",
            "高级抽象到底层控制",
            "解释执行到编译优化",
            "自动内存管理到指针操作",
            "Web 开发到系统编程",
            "事件循环到多线程并发"
          ]
        },
        "js2swift": {
          "title": "JavaScript → Swift 特色",
          "highlights": [
            "动态类型到类型安全",
            "Web 开发到 iOS/macOS 开发",
            "函数式编程到协议导向编程",
            "异步编程到 Combine 框架"
          ]
        },
        "js2c": {
          "title": "JavaScript → C 特色",
          "highlights": [
            "垃圾回收到手动内存管理",
            "高级语言到低级系统编程",
            "动态类型到静态类型",
            "解释执行到编译执行"
          ]
        },
        "js2dart": {
          "title": "JavaScript → Dart 特色",
          "highlights": [
            "动态类型到类型安全",
            "Web 开发到跨平台开发",
            "事件循环到 isolate 模型",
            "函数式编程到面向对象"
          ]
        }
      },
      "learningTips": [
        "每个模块都包含丰富的代码示例和练习题",
        "支持多种学习节奏，可根据个人情况调整",
        "提供实时反馈和性能监控",
        "包含真实项目案例和最佳实践"
      ],
      "languageOptimization": {
        "title": "语言特定优化",
        "subtitle": "每种语言转换都有其独特的优化重点和学习特色"
      },
      "learningTipsSection": {
        "title": "学习提示",
        "subtitle": "遵循这些建议，让你的学习之旅更加高效和愉快"
      }
    },
    "testimonials": {
      "title": "开发者说",
      "subtitle": "听听他们的学习体验",
      "items": [
        {
          "name": "张明",
          "role": "全栈开发者",
          "content": "通过 LangShift.dev 学习 Python，2 周就能独立开发 Web 应用了。对比学习的方式真的很有效，比传统学习快很多！",
          "avatar": "👨‍💻"
        },
        {
          "name": "李华",
          "role": "前端工程师",
          "content": "从 JavaScript 到 Rust 的转换学习让我对系统编程有了全新的认识，性能提升明显，代码质量也更高了。",
          "avatar": "👩‍💻"
        },
        {
          "name": "王强",
          "role": "技术主管",
          "content": "团队使用 LangShift.dev 进行技术栈迁移培训，学习效率提升了 3 倍，强烈推荐给所有需要学习新语言的开发者！",
          "avatar": "👨‍💼"
        }
      ]
    },
    "cta": {
      "title": "准备好开始免费的语言学习之旅了吗？",
      "subtitle": "加入 5,000+ 开发者的免费学习行列，无需注册，立即开始",
      "primary": "立即免费学习",
      "secondary": "查看免费学习路径",
      "completelyFree": "完全免费，永远免费"
    },
    "structuredData": {
      "courseList": "编程语言转换课程"
    }
  },
  "interactiveComparison": {
    "initialLanguageLabel": "初始语言",
    "targetLanguageLabel": "目标语言",
    "showComparisonButton": "显示对比",
    "noComparisonAvailable": "所选语言暂无对比。请尝试其他组合。",
    "selectPlaceholder": "选择一种语言"
  },
  "languages": {
    "javascript": "JavaScript",
    "python": "Python",
    "rust": "Rust",
    "cpp": "C++",
    "c": "C"
  },
  "header": {
    "logo": "LangShift.dev",
    "nav": {
      "home": "首页",
      "courses": "课程",
      "docs": "文档",
      "about": "关于"
    },
    "languageSelector": {
      "label": "语言",
      "en": "English",
      "zh-cn": "简体中文",
      "zh-tw": "繁體中文"
    },
    "github": {
      "label": "GitHub",
      "tooltip": "在 GitHub 上查看源代码"
    }
  },
  "editor": {
    "title": "多语言代码编辑器",
    "loading": "正在加载编辑器...",
    "loadingRuntime": "正在初始化 {language}...",
    "running": "运行中...",
    "run": "运行 {language}",
    "output": "输出结果",
    "error": "错误",
    "executionFailed": "{language} 环境初始化失败",
    "executionError": "代码执行出错",
    "unsupportedLanguage": "不支持的语言: {language}",
    "runtimeError": "{language} 代码执行失败: {error}",
    "compilationFailed": "编译失败",
    "noCode": "暂无代码",
    "copyCode": "复制代码",
    "codeCopied": "代码已复制",
    "theme": {
      "light": "浅色主题",
      "dark": "深色主题",
      "auto": "自动主题"
    },
    "languages": {
      "python": "Python",
      "javascript": "JavaScript",
      "typescript": "TypeScript",
      "rust": "Rust",
      "cpp": "C++",
      "c": "C",
      "java": "Java",
      "go": "Go",
      "swift": "Swift",
      "kotlin": "Kotlin"
    }
  }
} 